import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import withAuth from "../../helpers/withAuth";
import firebase from "firebase/app";
import { useEffect, useState } from "react";
import Loader from "../../components/Loader";
import Sidenav from "../../components/Sidenav";
import styled from "styled-components";
import MaterialTable from "material-table";
import Profile from "../../components/Profile";

//----------------styles

const Heading = styled.h4`
  /* margin-top:10px; */
  font-family: Oswald;
  font-style: normal;
  font-weight: normal;
  font-size: 30px;
  line-height: 50px;
  /* or 100% */
  text-align: center;
  letter-spacing: 0.03em;
  color: #4b4b60;
  cursor: pointer;
  /* border-bottom:10px solid #FBB300; */
  max-width: 200px;
`;
const Label = styled.label`
  float: left;
  color: #4b4b60;
  font-family: Oswald;
  letter-spacing: 3px;
`;
const SubmitButton = styled.button`
  background: #ffc535;
  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
  border: none;
  border-radius: 25px;
  float: left;
  margin-top: 30px;
  width: 100%;
  color: #4b4b60;
  font-family: Oswald;
  letter-spacing: 3px;
  &:hover {
    color: #ffc535;
    background: #4b4b60;
  }
`;

function OrderLogs() {
  const [orders, setOrders] = useState([]);
  const [items, setItems] = useState([]);
  const [status, setStatus] = useState("");
  const [orderid, setOrderid] = useState("");
  const user = firebase.auth().currentUser;
  useEffect(() => {
    async function getItems() {
      var requestOptions = {
        redirect: "follow",
        headers: {
          Accept: "application/json",
          "Content-Type": "application/json",
          Authorization: user.Aa,
        },
      };
      const response = await fetch(
        "https://babitz-backend.herokuapp.com/currentOrdersForRestaurant",
        requestOptions
      );
      const list = await response.json();
      setOrders(list);
    }
    getItems();
  }, [user.Aa]);

  const submit_item_status = (e) => {
    e.preventDefault();
  };
  return (
    <div>
      <Head>
        <title>Babtiz</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link
          rel="stylesheet"
          href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css"
        />
      </Head>
      <div className="container-fluid">
        <div class="modal fade" id="myModal" role="dialog">
          <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">
                  &times;
                </button>
                <h4 class="modal-title">Edit Item Status</h4>
              </div>
              <form onSubmit={submit_item_status}>
                <div class="modal-body">
                  <Label>Edit Item Status</Label>
                  <select
                    className="form-control"
                    onChange={(e) => setStatus(e.target.value)}
                    required
                  >
                    <option value="">Select</option>
                    <option value="pending">Pending</option>
                    <option value="accept">Accept</option>
                    <option value="complete">Complete</option>
                  </select>
                </div>
                <div class="modal-footer">
                  <button
                    type="submit"
                    class="btn btn-default"
                    data-dismiss="modal"
                  >
                    Save Change
                  </button>
                </div>
              </form>
            </div>
          </div>
        </div>
        <div className="row">
          <div className="col-md-3">
            <Sidenav />
          </div>
          <div className="col-md-9">
            <div style={{ paddingBottom: "20px" }}>
              <Profile />
            </div>

            <center>
              <div
                className="row"
                style={{ marginTop: "60px", marginBottom: "50px" }}
              >
                <div class="col-md-12">
                  <Label>Today's Live Orders</Label>
                  <MaterialTable
                    style={{
                      position: "absolute",
                      width: "95%",
                      zIndex: "0",
                      borderBottom: "1px solid #B1B6C0",
                      borderLeft: "1px solid #B1B6C0",
                      borderRight: "1px solid #B1B6C0",
                      borderBottomLeftRadius: "5px",
                      borderBottomRightRadius: "5px",
                      marginTop: "50px",
                      marginBottom: "50px",
                      fontFamily: "Oswald",
                    }}
                    title="List Of All Exams"
                    columns={[
                      {
                        title: "Status",
                        field: "Status",
                        render: (rowData) => (
                          <div style={{ textTransform: "capitalize" }}>
                            {rowData.orderStatus}
                          </div>
                        ),
                      },
                      {
                        title: "Order Items",
                        field: "Items",
                        render: (rowData) => (
                          <div>
                            {rowData.items.map((data) => {
                              return (
                                <div key={data.item.id}>
                                  {data.item.name} - {data.qty}
                                </div>
                              );
                            })}
                          </div>
                        ),
                      },
                      {
                        title: "Location",
                        field: "Location",
                        render: (rowData) => (
                          <div>
                            {rowData.location.firstLine},{" "}
                            {rowData.location.pincode}
                          </div>
                        ),
                      },
                      {
                        title: "Amount",
                        field: "Amount",
                        render: (rowData) => <div>â‚¹ {rowData.amount}</div>,
                      },
                      {
                        title: "Edit",
                        field: "Edit",
                        width: "10%",
                        render: (rowData) => (
                          <div>
                            {" "}
                            <span
                              style={{
                                fontSize: "17px",
                                color: "grey",
                                cursor: "pointer",
                              }}
                              data-toggle="modal"
                              data-target="#myModal"
                              onClick={() => setOrderid(rowData.id)}
                              class="glyphicon glyphicon-edit"
                            ></span>
                          </div>
                        ),
                      },
                    ]}
                    data={orders}
                    options={{
                      headerStyle: {
                        background:
                          "linear-gradient(180deg, rgba(248, 235, 209, 0.8) 28.13%, rgba(248, 235, 209, 0) 100%)",
                        color: "#4B4B60",
                        fontSize: "16px",
                        fontWeight: "Montserrat",
                      },
                      toolbar: false,
                      search: false,
                      sorting: true,
                    }}
                  />
                </div>
              </div>
            </center>
          </div>
        </div>
      </div>
    </div>
  );
}

export default withAuth(OrderLogs);
